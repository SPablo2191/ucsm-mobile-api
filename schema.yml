openapi: 3.0.3
info:
  title: UCSM API
  version: 0.0.1
  description: API REST para la aplicación UCSM Mobile de la Universidad Católica
    de Santa María
paths:
  /api/buildings/:
    get:
      operationId: api_buildings_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - TagEnum.BUILDING
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBuildingList'
          description: ''
    post:
      operationId: api_buildings_create
      tags:
      - TagEnum.BUILDING
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Building'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Building'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
          description: ''
  /api/buildings/{id}/:
    get:
      operationId: api_buildings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this building.
        required: true
      tags:
      - TagEnum.BUILDING
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
          description: ''
    put:
      operationId: api_buildings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this building.
        required: true
      tags:
      - TagEnum.BUILDING
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Building'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Building'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Building'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
          description: ''
    patch:
      operationId: api_buildings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this building.
        required: true
      tags:
      - TagEnum.BUILDING
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBuilding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBuilding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBuilding'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
          description: ''
    delete:
      operationId: api_buildings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this building.
        required: true
      tags:
      - TagEnum.BUILDING
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: api_events_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - TagEnum.EVENT
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: api_events_create
      tags:
      - TagEnum.EVENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: api_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - TagEnum.EVENT
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - TagEnum.EVENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: api_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - TagEnum.EVENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - TagEnum.EVENT
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/Student'
                  expires_in:
                    type: integer
                  token:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - Auth
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/plans/:
    get:
      operationId: api_plans_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - TagEnum.PLAN
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
          description: ''
    post:
      operationId: api_plans_create
      tags:
      - TagEnum.PLAN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/{id}/:
    get:
      operationId: api_plans_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - TagEnum.PLAN
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    put:
      operationId: api_plans_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - TagEnum.PLAN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    patch:
      operationId: api_plans_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - TagEnum.PLAN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    delete:
      operationId: api_plans_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - TagEnum.PLAN
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/professors/:
    get:
      operationId: api_professors_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - TagEnum.PROFESSOR
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfessorList'
          description: ''
    post:
      operationId: api_professors_create
      tags:
      - TagEnum.PROFESSOR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Professor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
  /api/professors/{id}/:
    get:
      operationId: api_professors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Professor.
        required: true
      tags:
      - TagEnum.PROFESSOR
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
    put:
      operationId: api_professors_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Professor.
        required: true
      tags:
      - TagEnum.PROFESSOR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Professor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
    patch:
      operationId: api_professors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Professor.
        required: true
      tags:
      - TagEnum.PROFESSOR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
    delete:
      operationId: api_professors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Professor.
        required: true
      tags:
      - TagEnum.PROFESSOR
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/semesters/:
    get:
      operationId: api_semesters_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - TagEnum.SEMESTER
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSemesterList'
          description: ''
    post:
      operationId: api_semesters_create
      tags:
      - TagEnum.SEMESTER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Semester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Semester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Semester'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
  /api/semesters/{id}/:
    get:
      operationId: api_semesters_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this semester.
        required: true
      tags:
      - TagEnum.SEMESTER
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    put:
      operationId: api_semesters_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this semester.
        required: true
      tags:
      - TagEnum.SEMESTER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Semester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Semester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Semester'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    patch:
      operationId: api_semesters_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this semester.
        required: true
      tags:
      - TagEnum.SEMESTER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    delete:
      operationId: api_semesters_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this semester.
        required: true
      tags:
      - TagEnum.SEMESTER
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/students/:
    get:
      operationId: api_students_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: identification_document
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - TagEnum.STUDENT
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentList'
          description: ''
    post:
      operationId: api_students_create
      tags:
      - TagEnum.STUDENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/students/{id}/:
    get:
      operationId: api_students_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - TagEnum.STUDENT
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    put:
      operationId: api_students_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - TagEnum.STUDENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: api_students_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - TagEnum.STUDENT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
components:
  schemas:
    Building:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
      required:
      - id
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        image_url:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
        building:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - building
      - id
    Login:
      type: object
      properties:
        identification_document:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 128
      required:
      - identification_document
      - password
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
      required:
      - id
    PaginatedBuildingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Building'
    PaginatedEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedProfessorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Professor'
    PaginatedSemesterList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Semester'
    PaginatedStudentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    PatchedBuilding:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
    PatchedEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        image_url:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
        building:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
    PatchedProfessor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        middle_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        identification_document:
          type: string
          maxLength: 50
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
    PatchedSemester:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
    PatchedStudent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        password:
          type: string
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        middle_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        second_last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        birth_date:
          type: string
          format: date
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        identification_document:
          type: string
          maxLength: 50
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    Plan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
      required:
      - end_date
      - id
    Professor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        middle_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        identification_document:
          type: string
          maxLength: 50
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
      required:
      - id
      - identification_document
    Semester:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
      required:
      - end_date
      - id
    Student:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        password:
          type: string
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        middle_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        second_last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        birth_date:
          type: string
          format: date
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        identification_document:
          type: string
          maxLength: 50
        status:
          type: string
          maxLength: 20
        register_date:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - identification_document
      - password
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
